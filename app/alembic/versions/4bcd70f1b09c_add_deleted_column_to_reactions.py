"""Add deleted column to reactions

Revision ID: 4bcd70f1b09c
Revises: 46cf8191dd05
Create Date: 2025-10-07 06:46:55.733877+00:00
"""

from typing import Sequence, Union
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "4bcd70f1b09c"
down_revision: Union[str, None] = "46cf8191dd05"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "blogs",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "comments",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )

    # âœ… Add the 'deleted' column with a safe default value
    op.add_column(
        "reactions",
        sa.Column("deleted", sa.Boolean(), nullable=False, server_default=sa.text("false")),
    )

    op.alter_column(
        "reactions",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "reactions",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.drop_column("reactions", "deleted")
    op.alter_column(
        "comments",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "blogs",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    # ### end Alembic commands ###

